//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CPInstrBuildTask {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CPInstrBuildTask.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ////* this ALWAYS GENERATED file contains the definitions for the interfaces */
        ///
        ///
        /// /* File created by MIDL compiler version 8.00.0603 */
        ////* at Thu Oct 26 08:52:14 2017
        /// */
        ////* Compiler settings for CPTracer.idl:
        ///    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 8.00.0603 
        ///    protocol : dce , ms_ext, c_ext, robust
        ///    error checks: allocation ref bounds_check enum stub_data 
        ///    VC __declspec() decoration level: 
        ///         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CPTracer_i {
            get {
                return ResourceManager.GetString("CPTracer_i", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &quot;tracer.h&quot;
        ///#include &lt;iostream&gt;
        ///#include &lt;chrono&gt;
        ///#include &quot;../CPTracer/CPTracer_i.h&quot;
        ///#include &lt;atlcomcli.h&gt;
        ///
        ///#define MIDL_DEFINE_GUID(type,name,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8) \
        ///        const type name = {l,w1,w2,{b1,b2,b3,b4,b5,b6,b7,b8}}
        ///MIDL_DEFINE_GUID( CLSID, CLSID_CPTracerFactory, 0xEA343A3A, 0xCF94, 0x4210, 0x89, 0xF5, 0x9B, 0xDF, 0x56, 0x11, 0x2C, 0xA2 );
        ///
        ///namespace cptracer
        ///{
        ///
        ///  int32_t type_id&lt;int8_t&gt;::id = 0;
        ///  int32_t type_id&lt;int16_t&gt;::id = 1;
        ///  int32_t type_id&lt;int32_t&gt;: [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tracer {
            get {
                return ResourceManager.GetString("tracer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #ifndef TRACER_H
        ///#define TRACER_H
        ///
        ///#include &lt;stdint.h&gt;
        ///#include &lt;string&gt;
        ///#include &lt;memory&gt;
        ///#include &lt;iostream&gt;
        ///
        ///namespace cptracer
        ///{
        ///
        ///  template&lt; typename T &gt; class type_id
        ///  {
        ///  public:
        ///    static int32_t id;
        ///  };
        ///
        ///  class tracer_elem
        ///  {
        ///    uint64_t addr;
        ///    std::string name;
        ///  public:
        ///    tracer_elem();
        ///    tracer_elem( uint64_t _addr, const char *_name, uint32_t _type_id );
        ///    virtual void reg( uint64_t _addr, const char *_name, uint32_t _type_id );
        ///    const std::string &amp;get [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string tracer1 {
            get {
                return ResourceManager.GetString("tracer1", resourceCulture);
            }
        }
    }
}
